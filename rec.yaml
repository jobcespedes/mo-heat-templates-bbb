heat_template_version: newton
description: >
  Plantilla de orquestacion para configurar servidor de BBB que maneje las grabaciones. Se debe utilizar una imagen con BBB previamente instalado. La plantilla devuelve la url y la llave compartida de BBB. Para la configuracion se utiliza parte del codigo de bbb-conf.

parameters:
  key_name:
    type: string
  nfs_flavor:
    type: string
  nfs_image:
    type: string
  nfs_server_name:
    type: string
    label: Nombre del servidor NFS
    description: Nombre del servidor NFS
    default: ""
  nfs_security_groups:
    type: comma_delimited_list
    label: Lista de grupos de seguridad
    description: Lista separada por comas para grupos de seguridad del nfs
    default: "default"
  nfs_bbb_directory:
    type: string
    label: Directorio para grabaciones
    description: Directorio para grabaciones de BBB
    default: /mnt/var/bigbluebutton/
  nfs_bbb_directory_nfs_access:
    type: string
    label: Redes con acceso a directorio BBB
    description: Redes con acceso a directorio BBB
    default: 192.168.0.0/24
  nfs_bbb_directory_nfs_opts:
    type: string
    label: Opciones nfs para nfs_bbb_directory
    description: Opciones nfs para directorio de grabaciones de BBB
    default: rw,sync,no_subtree_check,no_root_squash
  bbb_flavor:
    type: string
  bbb_image:
    type: string
  bbb_server_name:
    type: string
    label: Nombre del servidor BBB
    description: Nombre del servidor BBB
    default: ""
  bbb_demo:
    type: string
    label: Cliente demo de BBB
    description: Instalar cliente demo de BBB
    default: No
  private_net:
    type: string
    label: Nombre de la red privada
    description: Nombre de la red privada o su ID
  public_net:
    type: string
    label: Nombre de la red publica
    description: Nombre de la red publica o su ID
  bbb_security_groups:
    type: comma_delimited_list
    label: Lista de grupos de seguridad
    description: Lista separada por comas para grupos de seguridad
    default: "default,bbb"
  bbb_domain:
    type: string
    label: Dominio de VM
    description: Dominio de VM
    default: ""

resources:
  nfs-server:
    type: OS::Nova::Server
    properties:
      name: {get_param: nfs_server_name}
      key_name: {get_param: key_name}
      image: {get_param: nfs_image}
      flavor: {get_param: nfs_flavor}
      security_groups: {get_param: nfs_security_groups}
      networks:
        - network: {get_param: private_net}
      metadata:
        layer: "bbb"
        role: "nfs"
        description: "Servidor NFS"
        osArch: "x86_64"
        osFamily: "unix"
        osName: "Linux"
        distro: "Ubuntu"
        osVersion: "16.04"
        tags: "nfs,ubuntu,xenial"
        # Para ubicar en diferentes hipervisores
        # scheduler_hints:
          # group: {Ref: haproxy_cluster}
      user_data_format: SOFTWARE_CONFIG

  nfs-init:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config: |
        #!/bin/bash -x
        # Agregar hostname a /etc/hosts
        sed -i "s@^127.0.0.1 localhost.*@127.0.0.1 localhost $(hostname)@" /etc/hosts
        # NFS
        apt-get update
        apt-get install -y nfs-kernel-server
        mkdir -p ${nfs_bbb_directory}
        chown -R nobody:nogroup ${nfs_bbb_directory}
        chmod -R 777 ${nfs_bbb_directory}
        echo "${nfs_bbb_directory} ${nfs_bbb_directory_nfs_access}(${nfs_bbb_directory_nfs_opts})" >> /etc/exports
        systemctl restart nfs-kernel-server

  nfs-deploy:
    type: OS::Heat::SoftwareDeployment
    properties:
      actions: ['CREATE','UPDATE']
      config: {get_resource: nfs-init}
      server: {get_resource: nfs-server}
      input_values:
        nfs_bbb_directory: {get_param: nfs_bbb_directory}
        nfs_bbb_directory_nfs_access: {get_param: nfs_bbb_directory_nfs_access}
        nfs_bbb_directory_nfs_opts: {get_param: nfs_bbb_directory_nfs_opts}

  bbb-server:
    type: bbb.yaml
    properties:
      server_name: {get_param: bbb_server_name}
      key_name: {get_param: key_name}
      flavor: {get_param: bbb_flavor}
      image: {get_param: bbb_image}
      private_net: {get_param: private_net}
      public_net: {get_param: public_net}
      security_groups: {get_param: bbb_security_groups}
      bbb_domain: {get_param: bbb_domain}
      bbb_demo: {get_param: bbb_demo}
      bbb_nfs_mount:
        list_join: [':', [{get_attr: [nfs-server, networks, {get_param: private_net}, 0]}, {get_param: nfs_bbb_directory}]]

outputs:
  public_ip:
    description: >
      IP publica de la instancia BBB
    value: { get_attr: [bbb-server, public_ip] }
  private_ip:
    description: >
      IP privada de la instancia BBB
    value: { get_attr: [bbb-server, private_ip] }
  name:
    description: >
      Nombre de instancia BBB
    value: { get_attr: [bbb-server, name] }
  bbb_url:
    description: >
      URL de conexion a API de BBB
    value: { get_attr: [bbb-server, bbb_url] }
  bbb_shared_key:
    description: >
      Llave compartida de BBB
    value: { get_attr: [bbb-server, bbb_shared_key] }
  nfs_private_ip:
    description: >
      IP publica de la instancia NFS
    value: {get_attr: [nfs-server, networks, {get_param: private_net}, 0]}
  nfs_bbb_directory:
    description: >
      Directorio para grabaciones de BBB
    value: {get_param: nfs_bbb_directory}
  bbb_nfs_mount:
    description: >
      Punto de montaje NFS
    value:
      list_join: [':', [{get_attr: [nfs-server, networks, {get_param: private_net}, 0]}, {get_param: nfs_bbb_directory}]]
