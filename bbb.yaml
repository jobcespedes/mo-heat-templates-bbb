heat_template_version: newton
description: >
  Plantilla de orquestacion para configurar servidor de BBB. Se debe utilizar una imagen con BBB previamente instalado. La plantilla devuelve la url y la llave compartida de BBB. Para la configuracion se utiliza parte del codigo de bbb-conf.

parameters:
  server_name:
    type: string
    label: Nombre del servidor BBB
    description: Nombre del servidor BBB
    default: ""
  key_name:
    type: string
  flavor:
    type: string
  image:
    type: string
  bbb_demo:
    type: string
    label: Cliente demo de BBB
    description: Instalar cliente demo de BBB
    default: No
  private_net:
    type: string
    label: Nombre de la red privada
    description: Nombre de la red privada o su ID
  public_net:
    type: string
    label: Nombre de la red publica
    description: Nombre de la red publica o su ID
  security_groups:
    type: comma_delimited_list
    label: Lista de grupos de seguridad
    description: Lista separada por comas para grupos de seguridad
    default: "default,bbb"
  bbb_domain:
    type: string
    label: Dominio de VM
    description: Dominio de VM
    default: ""
  bbb_nfs_mount:
    type: string
    label: Punto de montaje NFS
    description: Montaje NFS para grabaciones
    default: ""
  bbb_nfs_hostname:
    type: string
    label: Servidor para grabaciones
    description: Nombre de servidor para grabaciones
    default: ""

resources:
  bbb-server:
    type: OS::Nova::Server
    properties:
      name: {get_param: server_name}
      key_name: {get_param: key_name}
      image: {get_param: image}
      flavor: {get_param: flavor}
      security_groups: {get_param: security_groups}
      networks:
        - network: {get_param: public_net}
        - network: {get_param: private_net}
      metadata:
        layer: "bbb"
        role: "node"
        description: "Servidor y nodo BBB"
        osArch: "x86_64"
        osFamily: "unix"
        osName: "Linux"
        distro: "Ubuntu"
        osVersion: "16.04"
        tags: "bbb,ubuntu,xenial"
        # Para ubicar en diferentes hipervisores
        # scheduler_hints:
          # group: {Ref: haproxy_cluster}
      user_data_format: SOFTWARE_CONFIG

  init:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      inputs:
      - name: shared_key_in
        description: Llave compartida de BBB
        default: No
      - name: is_bbb_demo
        description: Instalar cliente bbb demo
        default: No
      - name: bbb_ip
        description: IP del nodo de BBB
      - name: bbb_domain
        description: Dominio de VMs
      outputs:
      - name: bbb_url
        description: URL de conexion a BBB
      - name: shared_key_out
        description: Llave compartida de BBB
      config: |
        #!/bin/bash -x
        set -eu
        set -o pipefail

        echo "${bbb_ip} $(hostname)" >> /etc/hosts
        HOST=${bbb_ip}
        bbb_playback_host=${bbb_ip}

        # Configuración DNS
        if ! [[ -z ${bbb_domain+x} ]] && ! [[ -z ${bbb_domain} ]]; then
          bbb_host="bbb${bbb_ip##*.}.${bbb_domain}"
          echo "${bbb_ip} ${bbb_host}" >> /etc/hosts
          sed -i "s@ssl_certificate /etc/nginx/ssl/.*@ssl_certificate /etc/nginx/ssl/fullchain.pem;@" /etc/nginx/sites-available/bigbluebutton
          sed -i "s@ssl_certificate_key /etc/nginx/ssl/.*@ssl_certificate_key /etc/nginx/ssl/bbb.${bbb_domain}.key;@" /etc/nginx/sites-available/bigbluebutton
          HOST=${bbb_host}
          bbb_playback_host=${HOST}
        fi

        # Configuración NFS para grabaciones
        if ! [[ -z ${bbb_nfs_mount+x} ]] && ! [[ -z ${bbb_nfs_mount} ]]; then
          apt-get update && apt-get install -y nfs-common
          if ! [[ -z ${bbb_nfs_hostname+x} ]] && ! [[ -z ${bbb_nfs_hostname} ]]; then
            echo "${bbb_ip} ${bbb_nfs_hostname} #bbb para grabaciones" >> /etc/hosts
            mount ${bbb_nfs_mount}/published/ /var/bigbluebutton/published/
            bbb_playback_host="${bbb_nfs_hostname}"
          else
            cp -rp /var/bigbluebutton/ /tmp
            mount ${bbb_nfs_mount} /var/bigbluebutton/
            chmod 755 -R /var/bigbluebutton/
            chown tomcat7:tomcat7 -R /var/bigbluebutton/
            cp -rp /tmp/bigbluebutton/* /var/bigbluebutton/
            rm -rf /tmp/bigbluebutton
          fi
        fi

        # Asignar llave compartida y devolver como parametro
        if ! [[ ${shared_key_in} == "False" ]]; then
            bbb-conf --setsecret ${shared_key_in}
        fi

        # Eliminar perfiles ipv6 de freesweitch (solo ipv4)
        rm -rf /opt/freeswitch/etc/freeswitch/sip_profiles/*ipv6*
        sed -i "s@.*<param name=\"listen-ip\"@    <param name=\"listen-ip\" value=\"127.0.0.1\"/>@" /opt/freeswitch/etc/freeswitch/autoload_configs/event_socket.conf.xml

        # Actualizar IP y reiniciar servicios. En caso de estar detras de un balanceador aca deberia ir el dns del frontend
        ###################### Segmento de /usr/bin/bbb-conf ##################################
        # BlueButton open source conferencing system - http://www.bigbluebutton.org/
        #
        # Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).
        #
        # This program is free software; you can redistribute it and/or modify it under the
        # terms of the GNU Lesser General Public License as published by the Free Software
        # Foundation; either version 3.0 of the License, or (at your option) any later
        # version.
        #
        # BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
        # WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
        # PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
        #
        # You should have received a copy of the GNU Lesser General Public License along
        # with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.
        #
        # Author(s):
        #       Fred Dixon <ffdixon@bigbluebutton.org>
        #       Sebastian Schneider <seb.sschneider@gmail.com>
        #       Ghazi Triki <ghazi.nocturne@gmail.com>
        redis_host="127.0.0.1"
        SERVLET_CONTAINER=tomcat7
        SERVLET_DIR=/var/lib/$SERVLET_CONTAINER/webapps
        FREESWITCH_VARS=/opt/freeswitch/conf/vars.xml
        FREESWITCH_EXTERNAL=/opt/freeswitch/conf/sip_profiles/external.xml
        TO_BACKUP="N"

        if cat /var/www/bigbluebutton/client/conf/config.xml | grep "ChatModule" | grep -q https; then
        	PROTOCOL_HTTP=https
        	PROTOCOL_RTMP=rtmp
        else
        	PROTOCOL_HTTP=http
        	PROTOCOL_RTMP=rtmp
        fi
        check_and_backup () {
        	# can we write to the configuration file?
        	if [ ! -w $1 ]; then
        		echo "Cannot write to $1!"
        		exit 1
        	fi

        	# let's see if we need a copy
        	if [ "$TO_BACKUP" = "Y" ]; then
        		cp $1 $1.bak
        		TO_BACKUP="N"
        	fi
        }
        change_var_value () {
        	check_and_backup $1
        	sed -i "s<^[[:blank:]#]*\(${2}\).*<\1=${3}<" $1
        }
        change_yml_value () {
          sed -i "s<^[[:blank:]#]*\(${2}\):[ ].*<\1: ${3}<" $1
        }
        #
        # Just use the IP for port test in /var/www/bigbluebutton/client/conf/config.xml
        #
        echo "Assigning $HOST for testing for firewall in /var/www/bigbluebutton/client/conf/config.xml"
        sed -i "s/porttest host=\(\"[^\"]*\"\)/porttest host=\"$HOST\"/g" /var/www/bigbluebutton/client/conf/config.xml

        echo "Assigning $HOST for rtmp:// in /var/www/bigbluebutton/client/conf/config.xml"
        sed -i "s/rtmp[s]*:\/\/\([^\"\/]*\)\([\"\/]\)/$PROTOCOL_RTMP:\/\/$HOST\2/g" /var/www/bigbluebutton/client/conf/config.xml

        echo "Assigning $HOST for servername in /etc/nginx/sites-available/bigbluebutton"
        sed -i "s/server_name  .*/server_name  $HOST;/g" /etc/nginx/sites-available/bigbluebutton

        #
        # Update configuration for BigBlueButton client
        #
        echo "Assigning $HOST for http[s]:// in /var/www/bigbluebutton/client/conf/config.xml"
        sed -i "s/http[s]*:\/\/\([^\"\/]*\)\([\"\/]\)/$PROTOCOL_HTTP:\/\/$HOST\2/g"  /var/www/bigbluebutton/client/conf/config.xml

        echo "Assigning $HOST for publishURI in /var/www/bigbluebutton/client/conf/config.xml"
        sed -i "s/publishURI=\"[^\"]*\"/publishURI=\"$HOST\"/" /var/www/bigbluebutton/client/conf/config.xml

        sed -i "s@    <bwMon server=.*@    <bwMon server=\"${HOST}\" application=\"video/bwTest\"/>@" /var/www/bigbluebutton/client/conf/config.xml

        #
        # Update configuration for BigBlueButton web app
        #
        echo "Assigning $HOST for web application URL in ${SERVLET_DIR}/bigbluebutton/WEB-INF/classes/bigbluebutton.properties"

        sed -i "s/bigbluebutton.web.serverURL=http[s]*:\/\/.*/bigbluebutton.web.serverURL=$PROTOCOL_HTTP:\/\/$HOST/g" \
        	${SERVLET_DIR}/bigbluebutton/WEB-INF/classes/bigbluebutton.properties

        change_var_value /usr/share/red5/webapps/screenshare/WEB-INF/screenshare.properties streamBaseUrl rtmp://$HOST/screenshare
        change_var_value /usr/share/red5/webapps/screenshare/WEB-INF/screenshare.properties jnlpUrl $PROTOCOL_HTTP://$HOST/screenshare
        change_var_value /usr/share/red5/webapps/screenshare/WEB-INF/screenshare.properties jnlpFile $PROTOCOL_HTTP://$HOST/screenshare/screenshare.jnlp

        if ! grep -q server_names_hash_bucket_size /etc/nginx/nginx.conf; then
        	sed -i "s/gzip  on;/gzip  on;\n    server_names_hash_bucket_size  64;/g" /etc/nginx/nginx.conf
        fi

        #
        # Update bbb-apps-akka
        #
        echo "Assigning $HOST for web application URL in /usr/share/bbb-apps-akka/conf/application.conf"

        if [ -f /usr/share/bbb-apps-akka/conf/application.conf ]; then
          sed -i  "s/bbbWebAPI[ ]*=[ ]*\"[^\"]*\"/bbbWebAPI=\"${PROTOCOL_HTTP}:\/\/$HOST\/bigbluebutton\/api\"/g" \
            /usr/share/bbb-apps-akka/conf/application.conf
          sed -i "s/bbbWebHost[ ]*=[ ]*\"[^\"]*\"/bbbWebHost=\"$HOST\"/g" \
            /usr/share/bbb-apps-akka/conf/application.conf
          sed -i "s/deskshareip[ ]*=[ ]*\"[^\"]*\"/deskshareip=\"$HOST\"/g" \
            /usr/share/bbb-apps-akka/conf/application.conf
          sed -i  "s/defaultPresentationURL[ ]*=[ ]*\"[^\"]*\"/defaultPresentationURL=\"${PROTOCOL_HTTP}:\/\/$HOST\/default.pdf\"/g" \
            /usr/share/bbb-apps-akka/conf/application.conf
          # Fix to ensure application.conf has the latest shared secret
          SECRET=$(cat ${SERVLET_DIR}/bigbluebutton/WEB-INF/classes/bigbluebutton.properties | grep -v '#' | grep securitySalt | cut -d= -f2);
          sed -i "s/sharedSecret[ ]*=[ ]*\"[^\"]*\"/sharedSecret=\"$SECRET\"/g" \
            /usr/share/bbb-apps-akka/conf/application.conf
        fi

        if [ -f ${SERVLET_DIR}/lti/WEB-INF/classes/lti-config.properties ]; then
        	echo "Assigning $HOST for LTI integration in ${SERVLET_DIR}/lti/WEB-INF/classes/lti-config.properties"
        	# We don't wat to guess on http/https as the lti endpoint may be a different BigBlueButton server
        	sed -i "s/bigbluebuttonURL=http:\/\/.*/bigbluebuttonURL=http:\/\/$HOST\/bigbluebutton/g" \
          	${SERVLET_DIR}/lti/WEB-INF/classes/lti-config.properties
        	sed -i "s/bigbluebuttonURL=https:\/\/.*/bigbluebuttonURL=https:\/\/$HOST\/bigbluebutton/g" \
          	${SERVLET_DIR}/lti/WEB-INF/classes/lti-config.properties
        	sed -i "s/ltiEndPoint=.*/ltiEndPoint=$HOST/g" \
          	${SERVLET_DIR}/lti/WEB-INF/classes/lti-config.properties
        fi


        if [ -f /usr/local/bigbluebutton/core/scripts/bigbluebutton.yml ]; then
        	echo "Assigning $HOST for record and playback in /usr/local/bigbluebutton/core/scripts/bigbluebutton.yml"
        	change_yml_value /usr/local/bigbluebutton/core/scripts/bigbluebutton.yml playback_host ${bbb_playback_host}
          change_yml_value /usr/local/bigbluebutton/core/scripts/bigbluebutton.yml redis_host ${redis_host}
        fi

        if [ -f /var/www/bigbluebutton/check/conf/config.xml ]; then
        	echo "Assigning $HOST for client self check to /var/www/bigbluebutton/check/conf/config.xml"
        	sed -i "s/rtmp[s]*:\/\/\([^\"\/]*\)\//$PROTOCOL_RTMP:\/\/$HOST\//g" /var/www/bigbluebutton/check/conf/config.xml
        	sed -i "s/rtmpt:\/\/\([^\"\/]*\)\//rtmpt:\/\/$HOST\//g" /var/www/bigbluebutton/check/conf/config.xml
        fi

        # Set server ip address in FreeSWITCH
        sed -i "s@<X-PRE-PROCESS cmd=\"set\" data=\"local_ip_v4=.*\"/>@<X-PRE-PROCESS cmd=\"set\" data=\"local_ip_v4=${bbb_ip}\"/>@g"  $FREESWITCH_VARS

        # Set server ip address in red5 sip app. For flash client.
        sed -i "s/bbb.sip.app.ip=.*/bbb.sip.app.ip=${bbb_ip}/g" /usr/share/red5/webapps/sip/WEB-INF/bigbluebutton-sip.properties
        sed -i "s/freeswitch.ip=.*/freeswitch.ip=${bbb_ip}/g" /usr/share/red5/webapps/sip/WEB-INF/bigbluebutton-sip.properties

        # Enable WebRTC in the client
        sed -i "s@useWebRTCIfAvailable=\".*\"@useWebRTCIfAvailable=\"true\"@g" /var/www/bigbluebutton/client/conf/config.xml

        # Enable port 5066 in FreeSWITCH
        sed -i 's/^.*<!--<param name="ws-binding"  value=":5066"\/>-->.*$/\t<param name="ws-binding"  value=":5066"\/>/g' $FREESWITCH_EXTERNAL

        PROTOCOL=$(cat /etc/bigbluebutton/nginx/sip.nginx |  sed -n '/proxy_pass/{s/.*proxy_pass [ ]*//;s/:.*//;p}')
        PORT=5066
        if [[ $PROTOCOL == "https" ]]; then
          PORT=7443
        fi
        sed -i "s/proxy_pass .*/proxy_pass $PROTOCOL:\/\/${bbb_ip}:$PORT;/g" /etc/bigbluebutton/nginx/sip.nginx
        ###################### Fin de segmento de /usr/bin/bbb-conf ##################################

        # Inicio de servicios
        BBB_SERVICES="red5 tomcat7 nginx freeswitch redis-server bbb-apps-akka bbb-fsesl-akka bbb-record-core.timer libreoffice.service"
        HTML5=""
        WEBHOOKS=""
        if [ -f /usr/lib/systemd/system/bbb-html5.service ]; then
          HTML5="mongod bbb-html5"
        fi
        if [ -f /usr/lib/systemd/system/bbb-webhooks.service ]; then
          WEBHOOKS=bbb-webhooks
        fi
        action=restart
        systemctl $action $BBB_SERVICES $HTML5 $WEBHOOKS
        # bbb-conf --clean

        # Instalar demo si es requerido
        if ! [[ ${is_bbb_demo} == "False" ]]; then
            DEBIAN_FRONTEND=noninteractive apt-get -y install bbb-demo bbb-check
            if [ -f ${SERVLET_DIR}/demo/bbb_api_conf.jsp ]; then
              sed -i "s@^String BigBlueButtonURL.*@String BigBlueButtonURL = \"https://${HOST}/bigbluebutton/\";@" ${SERVLET_DIR}/demo/bbb_api_conf.jsp
            else
              sleep 30
              sed -i "s@^String BigBlueButtonURL.*@String BigBlueButtonURL = \"https://${HOST}/bigbluebutton/\";@" ${SERVLET_DIR}/demo/bbb_api_conf.jsp
            fi
            systemctl $action $BBB_SERVICES $HTML5 $WEBHOOKS
            # bbb-conf --clean
        fi

        # Devolver url y llave compartida
        bbb-conf --secret | grep -i url: | awk '{print $2}' > ${heat_outputs_path}.bbb_url
        bbb-conf --secret | grep -i secret: | awk '{print $2}' > ${heat_outputs_path}.shared_key_out

  bbb-server-init:
    type: OS::Heat::SoftwareDeployment
    properties:
      actions: ['CREATE','UPDATE']
      config: {get_resource: init}
      server: {get_resource: bbb-server}
      input_values:
        bbb_ip: {get_attr: [bbb-server, networks, {get_param: public_net}, 0]}
        is_bbb_demo: {get_param: bbb_demo}
        bbb_domain: {get_param: bbb_domain}
        bbb_nfs_hostname: {get_param: bbb_nfs_hostname}
        bbb_nfs_mount: {get_param: bbb_nfs_mount}


outputs:
  server:
    description: >
      Recurso para llamar instancia BBB.
    value: {get_resource: bbb-server}
  public_ip:
    description: >
      IP publica de la instancia
    value: {get_attr: [bbb-server, networks, {get_param: public_net}, 0]}
  private_ip:
    description: >
      IP privada de la instancia
    value: {get_attr: [bbb-server, networks, {get_param: private_net}, 0]}
  name:
    description: >
      Nombre de instancia
    value: {get_attr: [bbb-server, name]}
  bbb_url:
    description: >
      URL de conexion a API de BBB
    value: {get_attr: [bbb-server-init, bbb_url]}
  bbb_shared_key:
    description: >
      Llave compartida de BBB
    value: {get_attr: [bbb-server-init, shared_key_out]}
