heat_template_version: 2014-10-16
description: >
  Plantilla de orquestación para configurar servidor de BBB. Se debe utilizar una imagen con BBB previamente instalado. La plantilla devuelve la url y la llave compartida de BBB. Para la configuración se utiliza parte del código de bbb-conf.

parameters:
  # bbb_name:
     # type: string
  key_name:
     type: string
  flavor:
     type: string
  image:
     type: string
  private_net:
     type: string
     label: Nombre de la red privada
     description: Nombre de la red privada o su ID

resources:
  bbb-server:
    type: OS::Nova::Server
    properties:
      # name: {get_param: bbb_name}
      key_name: {get_param: key_name}
      image: {get_param: image}
      flavor: {get_param: flavor}
      networks:
        - network: {get_param: private_net}
      metadata:
        layer: "bbb"
        role: "node"
        description: "Servidor y nodo BBB"
        osArch: "x86_64"
        osFamily: "unix"
        osName: "Linux"
        distro: "Ubuntu"
        osVersion: "14.04"
        tags: "bbb,ubuntu,trusty"
        # Para ubicar en diferentes hipervisores
        # scheduler_hints:
          # group: {Ref: haproxy_cluster}
      user_data_format: SOFTWARE_CONFIG

  init:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      inputs:
      - name: shared_key_in
        description: Llave compartida de BBB
        default: No
      - name: bbb_ip
        description: IP del nodo de BBB
      outputs:
      - name: bbb_url
        description: URL de conexión a BBB
      - name: shared_key_out
        description: Llave compartida de BBB
      config: |
        #!/bin/bash -x
        set -eu
        set -o pipefail

        # Variables
        #shared_key_in="False"
        #bbb_ip="172.16.49.197"

        # Permite utilizar apt de forma desatendida
        export DEBIAN_FRONTEND=noninteractive

        # Asignar llave compartida y devolver como parametro
        if ! [[ ${shared_key_in} == "False" ]]; then
            bbb-conf --setsecret ${shared_key_in}
        fi

        # Activar audio WebRTC
        bbb-conf --enablewebrtc

        # Actualizar IP y reiniciar servicios. En caso de estar detras de un balanceador acá debería ir el dns del frontend
        ###################### Segmento de /usr/bin/bbb-conf ##################################
        # BlueButton open source conferencing system - http://www.bigbluebutton.org/
        #
        # Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).
        #
        # This program is free software; you can redistribute it and/or modify it under the
        # terms of the GNU Lesser General Public License as published by the Free Software
        # Foundation; either version 3.0 of the License, or (at your option) any later
        # version.
        #
        # BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
        # WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
        # PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
        #
        # You should have received a copy of the GNU Lesser General Public License along
        # with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.
        #
        # Author(s):
        #       Fred Dixon <ffdixon@bigbluebutton.org>
        #       Sebastian Schneider <seb.sschneider@gmail.com>
        HOST=${bbb_ip}
        redis_host=${bbb_ip}
        SERVLET_CONTAINER=tomcat7
        SERVLET_DIR=/var/lib/$SERVLET_CONTAINER/webapps
        if cat /var/www/bigbluebutton/client/conf/config.xml | grep "ChatModule" | grep -q https; then
            PROTOCOL_HTTP=https
            PROTOCOL_RTMP=rtmp
        else
            PROTOCOL_HTTP=http
            PROTOCOL_RTMP=rtmp
        fi
        change_yml_value () {
            sed -i "s<^[[:blank:]#]*\(${2}\):[ ].*<\1: ${3}<" $1
        }
        #
        # Just use the IP for port test in /var/www/bigbluebutton/client/conf/config.xml
        #
        echo "Assigning $HOST for testing for firewall in /var/www/bigbluebutton/client/conf/config.xml"
        sudo sed -i "s/porttest host=\(\"[^\"]*\"\)/porttest host=\"$HOST\"/g" /var/www/bigbluebutton/client/conf/config.xml

        echo "Assigning $HOST for rtmp:// in /var/www/bigbluebutton/client/conf/config.xml"
        sudo sed -i "s/rtmp[s]*:\/\/\([^\"\/]*\)\([\"\/]\)/$PROTOCOL_RTMP:\/\/$HOST\2/g" /var/www/bigbluebutton/client/conf/config.xml

        echo "Assigning $HOST for servername in /etc/nginx/sites-available/bigbluebutton"
        sudo sed -i "s/server_name  .*/server_name  $HOST;/g" /etc/nginx/sites-available/bigbluebutton

        #
        # Update configuration for BigBlueButton client
        #
        echo "Assigning $HOST for http[s]:// in /var/www/bigbluebutton/client/conf/config.xml"
        sudo sed -i "s/http[s]*:\/\/\([^\"\/]*\)\([\"\/]\)/$PROTOCOL_HTTP:\/\/$HOST\2/g"  /var/www/bigbluebutton/client/conf/config.xml

        echo "Assigning $HOST for publishURI in /var/www/bigbluebutton/client/conf/config.xml"
        sudo sed -i "s/publishURI=\"[^\"]*\"/publishURI=\"$HOST\"/" /var/www/bigbluebutton/client/conf/config.xml

        #
        # Update configuration for BigBlueButton web app
        #
        echo "Assigning $HOST for web application URL in ${SERVLET_DIR}/bigbluebutton/WEB-INF/classes/bigbluebutton.properties"

        sudo sed -i "s/bigbluebutton.web.serverURL=http[s]*:\/\/.*/bigbluebutton.web.serverURL=$PROTOCOL_HTTP:\/\/$HOST/g" \
            ${SERVLET_DIR}/bigbluebutton/WEB-INF/classes/bigbluebutton.properties

        # 3 paramenter: the file, the variable name, the new value
        # echo "Assigning $HOST for FreeSWITCH Event Socket Layer URL in ${SERVLET_DIR}/bigbluebutton/WEB-INF/classes/bigbluebutton.properties"
        # change_var_ip /usr/share/red5/webapps/bigbluebutton/WEB-INF/bigbluebutton.properties esl.host $HOST

        # cat ${SERVLET_DIR}/bigbluebutton/WEB-INF/classes/bigbluebutton.properties

        if ! grep -q server_names_hash_bucket_size /etc/nginx/nginx.conf; then
            sudo sed -i "s/gzip  on;/gzip  on;\n    server_names_hash_bucket_size  64;/g" /etc/nginx/nginx.conf
        fi

        #
        # Update api demos
        #

        if [ -f ${SERVLET_DIR}/demo/bbb_api_conf.jsp ]; then
            echo "Assigning $HOST for api demos in ${SERVLET_DIR}/demo/bbb_api_conf.jsp"
            sudo sed -i "s/BigBlueButtonURL = \"http[s]*:\/\/\([^\"\/]*\)\([\"\/]\)/BigBlueButtonURL = \"$PROTOCOL_HTTP:\/\/$HOST\2/g" \
                ${SERVLET_DIR}/demo/bbb_api_conf.jsp
        fi


        if [ -f ${SERVLET_DIR}/lti/WEB-INF/classes/lti.properties ]; then
            echo "Assigning $HOST for LTI integration in ${SERVLET_DIR}/lti/WEB-INF/classes/lti.properties"
            # We don't wat to guess on http/https as the lti endpoint may be a different BigBlueButton server
            sed -i "s/bigbluebuttonURL=http:\/\/.*/bigbluebuttonURL=http:\/\/$HOST\/bigbluebutton/g" \
                ${SERVLET_DIR}/lti/WEB-INF/classes/lti.properties
            sed -i "s/bigbluebuttonURL=https:\/\/.*/bigbluebuttonURL=https:\/\/$HOST\/bigbluebutton/g" \
                ${SERVLET_DIR}/lti/WEB-INF/classes/lti.properties
            sed -i "s/ltiEndPoint=.*/ltiEndPoint=$HOST/g" \
                ${SERVLET_DIR}/lti/WEB-INF/classes/lti.properties
        fi


        if [ -f /usr/local/bigbluebutton/core/scripts/bigbluebutton.yml ]; then
            echo "Assigning $HOST for record and playback in /usr/local/bigbluebutton/core/scripts/bigbluebutton.yml"
            change_yml_value /usr/local/bigbluebutton/core/scripts/bigbluebutton.yml $redis_host playback_host $HOST
        fi

        echo -n "Assigning $HOST for playback of recordings: "
        for metadata in $(find /var/bigbluebutton/published -name metadata.xml); do
            echo -n "."
            # Ensure we update both types of URLs
            sed -i "/<link>/{s/http:\/\/\([^\"\/]*\)\/playback\/$type\([^<]\)/http:\/\/$HOST\/playback\/$type\2/g}" $metadata
            sed -i "/<link>/{s/https:\/\/\([^\"\/]*\)\/playback\/$type\([^<]\)/https:\/\/$HOST\/playback\/$type\2/g}" $metadata
        done

        for metadata in $(find /var/bigbluebutton/unpublished -name metadata.xml); do
            echo -n "."
            # Ensure we update both types of URLs
            sed -i "/<link>/{s/http:\/\/\([^\"\/]*\)\/playback\/$type\([^<]\)/http:\/\/$HOST\/playback\/$type\2/g}" $metadata
            sed -i "/<link>/{s/https:\/\/\([^\"\/]*\)\/playback\/$type\([^<]\)/https:\/\/$HOST\/playback\/$type\2/g}" $metadata
        done
        echo

        if [ -f /var/www/bigbluebutton/check/conf/config.xml ]; then
            echo "Assigning $HOST for client self check to /var/www/bigbluebutton/check/conf/config.xml"
            sed -i "s/rtmp[s]*:\/\/\([^\"\/]*\)\//$PROTOCOL_RTMP:\/\/$HOST\//g" /var/www/bigbluebutton/check/conf/config.xml
            sed -i "s/rtmpt:\/\/\([^\"\/]*\)\//rtmpt:\/\/$HOST\//g" /var/www/bigbluebutton/check/conf/config.xml
        fi
        ###################### Segmento de /usr/bin/bbb-conf ##################################

        # Inicio limpio
        bbb-conf --clean

        # Devolver url y llave compartida
        bbb-conf --secret | grep Salt | awk '{print $2}' > ${heat_outputs_path}.shared_key_out
        bbb-conf --secret | grep URL | awk '{print $2}' > ${heat_outputs_path}.bbb_url

  bbb-server-init:
    type: OS::Heat::SoftwareDeployment
    properties:
      actions: ['CREATE','UPDATE']
      config: {get_resource: init}
      server: {get_resource: bbb-server}
      input_values:
         bbb_ip: {get_attr: [bbb-server, networks, {get_param: private_net}, 0]}

outputs:
  first_ip:
    description: >
      IP de instancia
    value: {get_attr: [bbb-server, networks, {get_param: private_net}, 0]}
  name:
    description: >
      Nombre de instancia
    value: {get_attr: [bbb-server, name]}
  bbb_url:
    description: >
      URL de conexión a BBB
    value: {get_attr: [bbb-server-init, bbb_url]}
  bbb_shared_key:
    description: >
      Llave compartida de BBB
    value: {get_attr: [bbb-server-init, shared_key_out]}
